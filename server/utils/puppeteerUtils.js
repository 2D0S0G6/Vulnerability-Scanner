const puppeteer = require('puppeteer');

(async () => {
    const browser = await puppeteer.launch();
    const page = await browser.newPage();
    const url = 'https://example.com';
    let data = [];

    await page.goto(url, { waitUntil: 'networkidle2' });

    const elementsInfo = await page.evaluate(() => {
        const elements = [];

        const getAttributes = (element) => {
            const attributes = {};
            Array.from(element.attributes).forEach((attr) => {
                attributes[attr.name] = attr.value;
            });
            return attributes;
        };

        const anchorElements = Array.from(document.querySelectorAll('a'));
        anchorElements.forEach((element) => {
            elements.push({
                type: 'a',
                href: element.href,
                textContent: element.textContent.trim(),
                className: element.className,
                id: element.id,
                attributes: getAttributes(element),
            });
        });

        const formElements = Array.from(document.querySelectorAll('input, button, textarea'));
        formElements.forEach((element) => {
            const parentForm = element.closest('form');
            elements.push({
                type: element.nodeName.toLowerCase(),
                name: element.name,
                value: element.value,
                form: parentForm ? parentForm.id || parentForm.name : null,
                className: element.className,
                id: element.id,
                attributes: getAttributes(element),
            });
        });

        const formTags = Array.from(document.querySelectorAll('form'));
        formTags.forEach((form) => {
            elements.push({
                type: 'form',
                id: form.id,
                name: form.name,
                action: form.action,
                method: form.method,
                className: form.className,
                attributes: getAttributes(form),
            });
        });

        return elements;
    });

    data.push(...elementsInfo);

    console.log(data);

    await browser.close();
})();
